[gd_scene load_steps=31 format=3 uid="uid://c4qjaucw5hqmb"]

[ext_resource type="Texture2D" uid="uid://bdtpxia85muik" path="res://Sprites/Detective.png" id="2_gvrli"]
[ext_resource type="Shader" path="res://Shaders/player.gdshader" id="2_tkkbv"]
[ext_resource type="Texture2D" uid="uid://bffs60sqpmp17" path="res://Sprites/survivor.png" id="3_ew067"]
[ext_resource type="LabelSettings" uid="uid://d7oua3pvvoo6" path="res://Fonts/label.tres" id="3_tyidl"]
[ext_resource type="Shader" path="res://Shaders/ennemi.gdshader" id="4_2v60e"]
[ext_resource type="Script" path="res://Scripts/RayCast.gd" id="6_nxdht"]
[ext_resource type="FontFile" uid="uid://bi04iecmbt37l" path="res://Fonts/ARCADECLASSIC.TTF" id="8_p2uvx"]
[ext_resource type="PackedScene" uid="uid://cyf0p1knbldrj" path="res://Scenes/inventory_ui.tscn" id="9_4q5lt"]
[ext_resource type="PackedScene" uid="uid://cmgn1d74ufrxo" path="res://Scenes/hotbar.tscn" id="10_4op6l"]

[sub_resource type="GDScript" id="GDScript_svgyy"]
script/source = "extends CharacterBody2D

var speed:int = 120
var animDirection = \"Down\"
var can_lauch_coin: bool = true
var dead = false
var disable_coin: bool = false
var can_launch_grenade: bool = true
var can_strangule: bool = true

var can_be_hit: bool = true
var health: int = 3

var nrj: float = 60.0

var aim_pos: Vector2

var sur_batterie:bool = false

var on_grass: bool
var tile_pos: Vector2i

#@onready var interaction_ui = $InteractionUI
@onready var animations = $AnimationPlayer
@onready var inventory_ui = $InventoryUI
#@onready var inventory_ui = $InventoryUI/ColorRect/Inventory_UI/GridContainer

@onready var hotbar = $Hotbar

signal coin(pos, dir)
signal grenade(pos, dir, vel)
signal etrangler()

var max_zoom :float = 3.0
var min_zoom :float = 0.5

func cast_ray(start, target):
	var space_state = get_world_2d().direct_space_state
	# use global coordinates, not local to node
	var query = PhysicsRayQueryParameters2D.create(start, target)
	query.set_collision_mask(1 | 11)
	query.exclude = [self]
#	query.collide_with_areas = true
	
	return space_state.intersect_ray(query)

func death():
	animations.stop()
	$Sprite2D.hide()
	$Death.show()
	animations.play(\"Explosion\")
	$TextBox/Label.text = \"Chui mort\"
#		$Sprite2D.rotation_degrees = 90
#		animations.stop()
	$TextBox/Label.show()
	$TimerDeath.start()
	dead = true

func say(text):
	$TextBox/Label.text = text
	$TextBox/Label.show()
	$TimerLabel.start()

func hit():
	if not dead and can_be_hit:
		health -= 1
		if health <= 0:
			animations.stop()
			$Sprite2D.hide()
			$Death.show()
			animations.play(\"Explosion\")
			$TextBox/Label.text = \"Chui mort\"
#		$Sprite2D.rotation_degrees = 90
#		animations.stop()
			$TextBox/Label.show()
			$TimerDeath.start()
			dead = true
		else:
			can_be_hit = false
			$TimerHitCooldown.start()
		
			$TextBox/Label.text = \"Aie\"
			$TextBox/Label.show()
			$TimerLabel.start()
			
		var tween = get_tree().create_tween()
#		tween.set_parallel(true)
#		var shader_color = $Sprite2D.material.get_shader_parameter(\"hit_color\")

		for i in range(5):
			tween.tween_property($Sprite2D, \"skew\", 0, 0.02)
			tween.tween_property($Sprite2D, \"skew\", 0, 0.02)
			tween.tween_property($Sprite2D, \"skew\", 0.15, 0.02)
			tween.tween_property($Sprite2D, \"skew\", 0, 0.02)
			tween.tween_property($Sprite2D, \"skew\", -0.15, 0.02)
			tween.tween_property($Sprite2D, \"skew\", 0, 0.02)
			
		var tween2 = get_tree().create_tween()	
		var tween3 = get_tree().create_tween()		
		for i in range(5):


			tween2.tween_method(set_shader_color, 1.0, 0.2, 0.04)
			tween2.tween_method(set_shader_color, 0.2, 1.0, 0.04)
			
			tween3.tween_method(set_shader_intensity, 0.0, 0.2, 0.02)
			tween3.tween_method(set_shader_intensity, 0.2, 0.7, 0.02) # args are: (method to call / start value / end value / duration of animation)
			tween3.tween_method(set_shader_intensity, 0.7, 0.2, 0.02)
			tween3.tween_method(set_shader_intensity, 0.2, 0.0, 0.02)
			
			tween.tween_property($Sprite2D, \"skew\", 0, 0.02)

func set_shader_color(value: float):
	# in my case i'm tweening a shader on a texture rect, but you can use anything with a material on it
	$Sprite2D.material.set_shader_parameter(\"changing_color\", value)

	
func set_shader_intensity(value: float):
	# in my case i'm tweening a shader on a texture rect, but you can use anything with a material on it
	$Sprite2D.material.set_shader_parameter(\"intensity\", value)

func _ready():
	# Set this node as the Player node
	Global.set_player_reference(self)
	check_ground()
	
	#Globals.connect(\"alarm_triggered\", on_connerie)
	#$\"../../CanvasLayer2/Control/Label\".text = str(nrj)
#func on_connerie():
	#$TextBox/Label.text = \"Oups\"
	#$TimerLabel.start()
	#$TextBox/Label.show()

func check_ground():
	tile_pos = Global.tile_map.local_to_map(position)

	var data = Global.tile_map.get_cell_tile_data(3, tile_pos)
	
	if data:
		on_grass = true
	else:
		on_grass = false

func updateAnimation():
	# print(Globals.alarme)
	var mode = \"\"
	if velocity.x == 0 and velocity.y == 0:
		mode = \"idle\"
	else:
		mode = \"walk\"
	
	if velocity.x == 0 and velocity.y == 0:
		pass
	else:
		var view_angle = int(rad_to_deg(velocity.angle()))
		
		if view_angle > 45 and view_angle < 135:
			animDirection = \"Down\"
		if view_angle >= 135 or view_angle < -135:
			animDirection = \"Left\"
		if view_angle >= -135 and view_angle < -45:
			animDirection = \"Up\"
		if view_angle >= -45 and view_angle <= 45:
			animDirection = \"Right\"		

#		if velocity.x > 0:
#			animDirection = \"Right\"
#		elif velocity.x < 0:
#			animDirection = \"Left\"
#		elif velocity.y > 0:
#			animDirection = \"Down\"
#		elif velocity.y < 0:
#			animDirection = \"Up\"
		
	animations.play(mode + animDirection)

#func _draw():
#	draw_line(Vector2.ZERO, aim_pos, Color(1, 1, 1, 1))

func _input(_event):
	if Input.is_action_just_pressed(\"zoom_in\"):
		var zoom_val = min($Camera2D.zoom.x + 0.1, max_zoom)
		$Camera2D.zoom = Vector2(zoom_val, zoom_val)
	if Input.is_action_just_pressed(\"zoom_out\"):
		var zoom_val = max($Camera2D.zoom.x - 0.1, min_zoom)
		$Camera2D.zoom = Vector2(zoom_val, zoom_val)
		
	if Input.is_action_just_pressed(\"inventory\"):
		inventory_ui.visible = !inventory_ui.visible
		#hotbar.visible = !hotbar.visible
		get_tree().paused = !get_tree().paused
		
		
func _process(_delta):
	
	$TextBox.offset = global_position
#	var result = cast_ray(Vector2.ZERO, to_local(get_global_mouse_position()))
#	if result:
#		print(result)
#		aim_pos = result.position
#
	#$RayCast2D.target_position = to_local($\"../../Home/CollisionShape2D\".global_position)
#
#	$Line2D.points = [Vector2.ZERO, aim_pos]
#	$Line2D.points[0] = global_position.y
#	$Line2D.points[1] = get_global_mouse_position()
#	$Line2D.points[1] = position.y
	if not dead:
		
		if sur_batterie:
			pass
			#print($TimerFatigue.time_left)
			#$\"../../CanvasLayer2/ProgressBar\".value = $TimerFatigue.time_left * 100 / $TimerFatigue.wait_time 
			#$\"../../CanvasLayer2/ProgressBar\".show()
	#	look_at(get_global_mouse_position())
		
	#	print(Globals.player_pos)
		#Globals.player_pos = $Marker2D.global_position
		
		var current_speed: int
		
		check_ground()
		
		if not on_grass:
			current_speed = speed - 30
		else:
			current_speed = speed

		var direction = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
		velocity = direction * current_speed
		updateAnimation()
		move_and_slide()


		#if Input.is_action_pressed(\"PrimaryAction\"):
			#if sur_batterie: 
				#$Line2D.show()
##				$Polygon2D.show()
	#
		#elif Input.is_action_just_released(\"PrimaryAction\"):
			#$Line2D.hide()
			#$Polygon2D.hide()
			#if can_lauch_coin and not disable_coin:
				#trow_coin()
				#can_lauch_coin = false
				#$TimerCoinCooldown.start()
		#
		#
		#
		#if Input.is_action_pressed(\"SecondaryAction\"):
			#if can_launch_grenade:
				#$Line2D.show()
##				$Polygon2D.show()
				#
		#elif Input.is_action_just_released(\"SecondaryAction\"):
			#$Line2D.hide()
			#$Polygon2D.hide()
			#if can_launch_grenade:
				#launch_grenade()
				#$TimerGrenadeCooldown.start()
		#
		#if Input.is_action_pressed(\"etrangler\"):
			#if can_strangule:
				#print(\"Je te strangule\")
				#etrangler.emit()
				#$TimerEtrangle.start()
				#can_strangule = false
				#
		#if Input.is_action_pressed(\"Reset\"):
			#death()

func trow_coin():
	var pos: Vector2 = $CoinSpawnPosition.global_position
	var dir: Vector2 = (get_global_mouse_position() - position).normalized()
	coin.emit(pos, dir)

func launch_grenade():
	can_launch_grenade = false
	var pos: Vector2 = $CoinSpawnPosition.global_position
	var dir: Vector2 = (get_global_mouse_position() - position).normalized()
	var vel: Vector2 = velocity
	var rot: float = pos.angle_to(dir)
	grenade.emit(pos, dir, vel, rot)
	



func _on_timer_coin_cooldown_timeout():
	can_lauch_coin = true


func _on_timer_death_timeout():
#	print(\"reload\")
	get_tree().reload_current_scene()


func _on_area_2d_mouse_entered():
	disable_coin = true


func _on_area_2d_mouse_exited():
	disable_coin = false


func _on_timer_grenade_cooldown_timeout():
	can_launch_grenade = true


func _on_timer_label_timeout():
	$TextBox/Label.hide()


func _on_timer_hit_cooldown_timeout():
	self.death()


func _on_ray_cast_2d_see(pos, collide):
	aim_pos = pos
	$Line2D.points = [Vector2.ZERO, to_local(pos)]

	if collide and (Input.is_action_pressed(\"SecondaryAction\") or Input.is_action_pressed(\"PrimaryAction\") and not disable_coin):
		$Polygon2D.global_position = pos
		$Polygon2D.show()
	else:
		$Polygon2D.hide()
#	print(pos)


func _on_timer_etrangle_timeout():
	can_strangule = true


func _on_home_area_entered(_area):
	print(\"Revenu\")
	$TimerFatigue.stop()
	$TextBox/Label.hide()
	
func _on_home_area_exited(_area):
	print(\"Sorti\")
	$TimerFatigue.wait_time = nrj
	sur_batterie = true


func _on_home_body_entered(_body):
	print(\"Revenu\")
	sur_batterie = false
	$TimerFatigue.stop()
	$\"../../CanvasLayer2/ProgressBar\".value = 100
	nrj += 5
	$\"../../CanvasLayer2/Control/Label\".text = str(nrj)


func _on_home_body_exited(_body):
	print(\"Sorti\")
	$TimerFatigue.wait_time = nrj
	$TimerFatigue.start()
	sur_batterie = true
"

[sub_resource type="Gradient" id="Gradient_84xoc"]
offsets = PackedFloat32Array(0.0388489, 0.946763)
colors = PackedColorArray(0.711185, 0.229956, 0.0458064, 1, 0.403903, 8.42288e-07, 9.62615e-08, 1)

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_c57br"]
radius = 3.4188
height = 8.54701

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xi4wo"]
shader = ExtResource("2_tkkbv")
shader_parameter/hit_color = Vector2(0.5, 0.1)
shader_parameter/intensity = 0.0
shader_parameter/changing_color = 1.0

[sub_resource type="FastNoiseLite" id="FastNoiseLite_qyc57"]
seed = 47
frequency = 0.1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_rv1nu"]
generate_mipmaps = false
as_normal_map = true
normalize = false
noise = SubResource("FastNoiseLite_qyc57")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_o7sib"]
frequency = 0.1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ajp3w"]
width = 48
height = 128
generate_mipmaps = false
normalize = false
noise = SubResource("FastNoiseLite_o7sib")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1hk12"]
shader = ExtResource("4_2v60e")
shader_parameter/progress = 0.0
shader_parameter/strength = 0.1
shader_parameter/noise_tex_normal = SubResource("NoiseTexture2D_ajp3w")
shader_parameter/noise_tex = SubResource("NoiseTexture2D_rv1nu")

[sub_resource type="Animation" id="Animation_ph172"]
resource_name = "Explosion"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Death:material:shader_parameter/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="Animation" id="Animation_wsnsg"]
length = 3.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [36]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Death:material:shader_parameter/progress")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_8jnav"]
resource_name = "Repos Gauche"
length = 2.9
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.7, 1.2, 1.7, 2.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [36, 38, 39, 40, 41]
}

[sub_resource type="Animation" id="Animation_jqjqa"]
resource_name = "idleDown"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [42, 43, 44, 45, 46, 47]
}

[sub_resource type="Animation" id="Animation_iaq32"]
resource_name = "idleLeft"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [36, 37, 38, 39, 40, 41]
}

[sub_resource type="Animation" id="Animation_m752y"]
resource_name = "idleRight"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [24, 25, 26, 27, 28, 29]
}

[sub_resource type="Animation" id="Animation_87vy0"]
resource_name = "idleUp"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [30, 31, 32, 33, 34, 35]
}

[sub_resource type="Animation" id="Animation_5ysxw"]
resource_name = "walkDown"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [66, 67, 68, 69, 70, 71]
}

[sub_resource type="Animation" id="Animation_56t68"]
resource_name = "walkLeft"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [60, 61, 62, 63, 64, 65]
}

[sub_resource type="Animation" id="Animation_neyfu"]
resource_name = "walkRight"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [48, 49, 50, 51, 52, 53]
}

[sub_resource type="Animation" id="Animation_q803k"]
resource_name = "walkUp"
length = 1.2
loop_mode = 1
step = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [54, 55, 56, 57, 58, 59]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_nk55k"]
_data = {
"Explosion": SubResource("Animation_ph172"),
"RESET": SubResource("Animation_wsnsg"),
"Repos Gauche": SubResource("Animation_8jnav"),
"idleDown": SubResource("Animation_jqjqa"),
"idleLeft": SubResource("Animation_iaq32"),
"idleRight": SubResource("Animation_m752y"),
"idleUp": SubResource("Animation_87vy0"),
"walkDown": SubResource("Animation_5ysxw"),
"walkLeft": SubResource("Animation_56t68"),
"walkRight": SubResource("Animation_neyfu"),
"walkUp": SubResource("Animation_q803k")
}

[node name="Player" type="CharacterBody2D" groups=["Player"]]
process_mode = 3
z_index = 1
y_sort_enabled = true
collision_layer = 2
collision_mask = 5
platform_floor_layers = 4294967279
script = SubResource("GDScript_svgyy")

[node name="Line2D" type="Line2D" parent="."]
visible = false
points = PackedVector2Array(0, 0, 100, 100)
width = 1.0
gradient = SubResource("Gradient_84xoc")

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(2, 2)
position_smoothing_enabled = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
y_sort_enabled = true
position = Vector2(0, -3.5)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_c57br")

[node name="Sprite2D" type="Sprite2D" parent="."]
y_sort_enabled = true
material = SubResource("ShaderMaterial_xi4wo")
position = Vector2(0, -16)
texture = ExtResource("3_ew067")
hframes = 24
vframes = 4
frame = 36

[node name="Death" type="Sprite2D" parent="."]
visible = false
y_sort_enabled = true
material = SubResource("ShaderMaterial_1hk12")
texture = ExtResource("2_gvrli")
hframes = 24
vframes = 4
frame = 73

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_nk55k")
}
autoplay = "Repos Gauche"

[node name="Marker2D" type="Marker2D" parent="."]
position = Vector2(0, -1)

[node name="CoinSpawnPosition" type="Marker2D" parent="."]
position = Vector2(0, -1)

[node name="TimerCoinCooldown" type="Timer" parent="."]
wait_time = 2.0

[node name="TimerDeath" type="Timer" parent="."]
wait_time = 3.0
one_shot = true

[node name="TimerGrenadeCooldown" type="Timer" parent="."]
one_shot = true

[node name="TextBox" type="CanvasLayer" parent="."]
follow_viewport_enabled = true

[node name="Label" type="Label" parent="TextBox"]
visible = false
offset_left = -12.0
offset_top = -38.0
offset_right = 28.0
offset_bottom = -15.0
size_flags_horizontal = 4
label_settings = ExtResource("3_tyidl")

[node name="TimerLabel" type="Timer" parent="."]
wait_time = 5.0

[node name="TimerFatigue" type="Timer" parent="."]
wait_time = 3.063
one_shot = true

[node name="RayCast2D" type="RayCast2D" parent="."]
visible = false
collision_mask = 5
script = ExtResource("6_nxdht")

[node name="Polygon2D" type="Polygon2D" parent="."]
visible = false
scale = Vector2(0.6, 0.6)
color = Color(0.301961, 0.00784314, 0, 1)
texture_scale = Vector2(2, 2)
polygon = PackedVector2Array(2, 2, 3, 0, 2, -2, 0, -3, -2, -2, -3, 0, -2, 2, 0, 3)

[node name="TimerEtrangle" type="Timer" parent="."]
one_shot = true

[node name="InventoryUI" type="CanvasLayer" parent="."]
visible = false

[node name="ColorRect" type="ColorRect" parent="InventoryUI"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 240.0
offset_top = 60.0
offset_right = -240.0
offset_bottom = -160.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 4
color = Color(0.388235, 0.47451, 0.466667, 1)

[node name="Label" type="Label" parent="InventoryUI/ColorRect"]
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -148.5
offset_top = 50.0
offset_right = 148.5
offset_bottom = 111.0
grow_horizontal = 2
size_flags_horizontal = 0
theme_override_fonts/font = ExtResource("8_p2uvx")
theme_override_font_sizes/font_size = 60
text = "Inventory"

[node name="Inventory_UI" parent="InventoryUI/ColorRect" instance=ExtResource("9_4q5lt")]
layout_mode = 1

[node name="Hotbar" type="CanvasLayer" parent="."]

[node name="Hotbar" parent="Hotbar" instance=ExtResource("10_4op6l")]

[connection signal="timeout" from="TimerCoinCooldown" to="." method="_on_timer_coin_cooldown_timeout"]
[connection signal="timeout" from="TimerDeath" to="." method="_on_timer_death_timeout"]
[connection signal="timeout" from="TimerGrenadeCooldown" to="." method="_on_timer_grenade_cooldown_timeout"]
[connection signal="timeout" from="TimerLabel" to="." method="_on_timer_label_timeout"]
[connection signal="timeout" from="TimerFatigue" to="." method="_on_timer_hit_cooldown_timeout"]
[connection signal="see" from="RayCast2D" to="." method="_on_ray_cast_2d_see"]
[connection signal="timeout" from="TimerEtrangle" to="." method="_on_timer_etrangle_timeout"]
